{"version":3,"file":"html-dom-parser.min.js","sources":["../node_modules/domelementtype/lib/esm/index.js","../node_modules/domhandler/lib/esm/node.js","../src/client/constants.ts","../src/client/utilities.ts","../src/client/domparser.ts","../src/client/html-to-dom.ts"],"sourcesContent":["/** Types of elements found in htmlparser2's DOM */\nexport var ElementType;\n(function (ElementType) {\n    /** Type for the root element of a document */\n    ElementType[\"Root\"] = \"root\";\n    /** Type for Text */\n    ElementType[\"Text\"] = \"text\";\n    /** Type for <? ... ?> */\n    ElementType[\"Directive\"] = \"directive\";\n    /** Type for <!-- ... --> */\n    ElementType[\"Comment\"] = \"comment\";\n    /** Type for <script> tags */\n    ElementType[\"Script\"] = \"script\";\n    /** Type for <style> tags */\n    ElementType[\"Style\"] = \"style\";\n    /** Type for Any tag */\n    ElementType[\"Tag\"] = \"tag\";\n    /** Type for <![CDATA[ ... ]]> */\n    ElementType[\"CDATA\"] = \"cdata\";\n    /** Type for <!doctype ...> */\n    ElementType[\"Doctype\"] = \"doctype\";\n})(ElementType || (ElementType = {}));\n/**\n * Tests whether an element is a tag or not.\n *\n * @param elem Element to test\n */\nexport function isTag(elem) {\n    return (elem.type === ElementType.Tag ||\n        elem.type === ElementType.Script ||\n        elem.type === ElementType.Style);\n}\n// Exports for backwards compatibility\n/** Type for the root element of a document */\nexport const Root = ElementType.Root;\n/** Type for Text */\nexport const Text = ElementType.Text;\n/** Type for <? ... ?> */\nexport const Directive = ElementType.Directive;\n/** Type for <!-- ... --> */\nexport const Comment = ElementType.Comment;\n/** Type for <script> tags */\nexport const Script = ElementType.Script;\n/** Type for <style> tags */\nexport const Style = ElementType.Style;\n/** Type for Any tag */\nexport const Tag = ElementType.Tag;\n/** Type for <![CDATA[ ... ]]> */\nexport const CDATA = ElementType.CDATA;\n/** Type for <!doctype ...> */\nexport const Doctype = ElementType.Doctype;\n","import { ElementType, isTag as isTagRaw } from \"domelementtype\";\n/**\n * This object will be used as the prototype for Nodes when creating a\n * DOM-Level-1-compliant structure.\n */\nexport class Node {\n    constructor() {\n        /** Parent of the node */\n        this.parent = null;\n        /** Previous sibling */\n        this.prev = null;\n        /** Next sibling */\n        this.next = null;\n        /** The start index of the node. Requires `withStartIndices` on the handler to be `true. */\n        this.startIndex = null;\n        /** The end index of the node. Requires `withEndIndices` on the handler to be `true. */\n        this.endIndex = null;\n    }\n    // Read-write aliases for properties\n    /**\n     * Same as {@link parent}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */\n    get parentNode() {\n        return this.parent;\n    }\n    set parentNode(parent) {\n        this.parent = parent;\n    }\n    /**\n     * Same as {@link prev}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */\n    get previousSibling() {\n        return this.prev;\n    }\n    set previousSibling(prev) {\n        this.prev = prev;\n    }\n    /**\n     * Same as {@link next}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */\n    get nextSibling() {\n        return this.next;\n    }\n    set nextSibling(next) {\n        this.next = next;\n    }\n    /**\n     * Clone this node, and optionally its children.\n     *\n     * @param recursive Clone child nodes as well.\n     * @returns A clone of the node.\n     */\n    cloneNode(recursive = false) {\n        return cloneNode(this, recursive);\n    }\n}\n/**\n * A node that contains some data.\n */\nexport class DataNode extends Node {\n    /**\n     * @param data The content of the data node\n     */\n    constructor(data) {\n        super();\n        this.data = data;\n    }\n    /**\n     * Same as {@link data}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */\n    get nodeValue() {\n        return this.data;\n    }\n    set nodeValue(data) {\n        this.data = data;\n    }\n}\n/**\n * Text within the document.\n */\nexport class Text extends DataNode {\n    constructor() {\n        super(...arguments);\n        this.type = ElementType.Text;\n    }\n    get nodeType() {\n        return 3;\n    }\n}\n/**\n * Comments within the document.\n */\nexport class Comment extends DataNode {\n    constructor() {\n        super(...arguments);\n        this.type = ElementType.Comment;\n    }\n    get nodeType() {\n        return 8;\n    }\n}\n/**\n * Processing instructions, including doc types.\n */\nexport class ProcessingInstruction extends DataNode {\n    constructor(name, data) {\n        super(data);\n        this.name = name;\n        this.type = ElementType.Directive;\n    }\n    get nodeType() {\n        return 1;\n    }\n}\n/**\n * A `Node` that can have children.\n */\nexport class NodeWithChildren extends Node {\n    /**\n     * @param children Children of the node. Only certain node types can have children.\n     */\n    constructor(children) {\n        super();\n        this.children = children;\n    }\n    // Aliases\n    /** First child of the node. */\n    get firstChild() {\n        var _a;\n        return (_a = this.children[0]) !== null && _a !== void 0 ? _a : null;\n    }\n    /** Last child of the node. */\n    get lastChild() {\n        return this.children.length > 0\n            ? this.children[this.children.length - 1]\n            : null;\n    }\n    /**\n     * Same as {@link children}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */\n    get childNodes() {\n        return this.children;\n    }\n    set childNodes(children) {\n        this.children = children;\n    }\n}\nexport class CDATA extends NodeWithChildren {\n    constructor() {\n        super(...arguments);\n        this.type = ElementType.CDATA;\n    }\n    get nodeType() {\n        return 4;\n    }\n}\n/**\n * The root node of the document.\n */\nexport class Document extends NodeWithChildren {\n    constructor() {\n        super(...arguments);\n        this.type = ElementType.Root;\n    }\n    get nodeType() {\n        return 9;\n    }\n}\n/**\n * An element within the DOM.\n */\nexport class Element extends NodeWithChildren {\n    /**\n     * @param name Name of the tag, eg. `div`, `span`.\n     * @param attribs Object mapping attribute names to attribute values.\n     * @param children Children of the node.\n     */\n    constructor(name, attribs, children = [], type = name === \"script\"\n        ? ElementType.Script\n        : name === \"style\"\n            ? ElementType.Style\n            : ElementType.Tag) {\n        super(children);\n        this.name = name;\n        this.attribs = attribs;\n        this.type = type;\n    }\n    get nodeType() {\n        return 1;\n    }\n    // DOM Level 1 aliases\n    /**\n     * Same as {@link name}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */\n    get tagName() {\n        return this.name;\n    }\n    set tagName(name) {\n        this.name = name;\n    }\n    get attributes() {\n        return Object.keys(this.attribs).map((name) => {\n            var _a, _b;\n            return ({\n                name,\n                value: this.attribs[name],\n                namespace: (_a = this[\"x-attribsNamespace\"]) === null || _a === void 0 ? void 0 : _a[name],\n                prefix: (_b = this[\"x-attribsPrefix\"]) === null || _b === void 0 ? void 0 : _b[name],\n            });\n        });\n    }\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node is a `Element`, `false` otherwise.\n */\nexport function isTag(node) {\n    return isTagRaw(node);\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `CDATA`, `false` otherwise.\n */\nexport function isCDATA(node) {\n    return node.type === ElementType.CDATA;\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `Text`, `false` otherwise.\n */\nexport function isText(node) {\n    return node.type === ElementType.Text;\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `Comment`, `false` otherwise.\n */\nexport function isComment(node) {\n    return node.type === ElementType.Comment;\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `ProcessingInstruction`, `false` otherwise.\n */\nexport function isDirective(node) {\n    return node.type === ElementType.Directive;\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `ProcessingInstruction`, `false` otherwise.\n */\nexport function isDocument(node) {\n    return node.type === ElementType.Root;\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has children, `false` otherwise.\n */\nexport function hasChildren(node) {\n    return Object.prototype.hasOwnProperty.call(node, \"children\");\n}\n/**\n * Clone a node, and optionally its children.\n *\n * @param recursive Clone child nodes as well.\n * @returns A clone of the node.\n */\nexport function cloneNode(node, recursive = false) {\n    let result;\n    if (isText(node)) {\n        result = new Text(node.data);\n    }\n    else if (isComment(node)) {\n        result = new Comment(node.data);\n    }\n    else if (isTag(node)) {\n        const children = recursive ? cloneChildren(node.children) : [];\n        const clone = new Element(node.name, { ...node.attribs }, children);\n        children.forEach((child) => (child.parent = clone));\n        if (node.namespace != null) {\n            clone.namespace = node.namespace;\n        }\n        if (node[\"x-attribsNamespace\"]) {\n            clone[\"x-attribsNamespace\"] = { ...node[\"x-attribsNamespace\"] };\n        }\n        if (node[\"x-attribsPrefix\"]) {\n            clone[\"x-attribsPrefix\"] = { ...node[\"x-attribsPrefix\"] };\n        }\n        result = clone;\n    }\n    else if (isCDATA(node)) {\n        const children = recursive ? cloneChildren(node.children) : [];\n        const clone = new CDATA(children);\n        children.forEach((child) => (child.parent = clone));\n        result = clone;\n    }\n    else if (isDocument(node)) {\n        const children = recursive ? cloneChildren(node.children) : [];\n        const clone = new Document(children);\n        children.forEach((child) => (child.parent = clone));\n        if (node[\"x-mode\"]) {\n            clone[\"x-mode\"] = node[\"x-mode\"];\n        }\n        result = clone;\n    }\n    else if (isDirective(node)) {\n        const instruction = new ProcessingInstruction(node.name, node.data);\n        if (node[\"x-name\"] != null) {\n            instruction[\"x-name\"] = node[\"x-name\"];\n            instruction[\"x-publicId\"] = node[\"x-publicId\"];\n            instruction[\"x-systemId\"] = node[\"x-systemId\"];\n        }\n        result = instruction;\n    }\n    else {\n        throw new Error(`Not implemented yet: ${node.type}`);\n    }\n    result.startIndex = node.startIndex;\n    result.endIndex = node.endIndex;\n    if (node.sourceCodeLocation != null) {\n        result.sourceCodeLocation = node.sourceCodeLocation;\n    }\n    return result;\n}\nfunction cloneChildren(childs) {\n    const children = childs.map((child) => cloneNode(child, true));\n    for (let i = 1; i < children.length; i++) {\n        children[i].prev = children[i - 1];\n        children[i - 1].next = children[i];\n    }\n    return children;\n}\n",null,null,null,null],"names":["ElementType","Root","Text","Directive","Comment","Script","Style","Tag","CDATA","Doctype","Node","constructor","this","parent","prev","next","startIndex","endIndex","parentNode","previousSibling","nextSibling","cloneNode","recursive","DataNode","data","super","nodeValue","arguments","type","nodeType","ProcessingInstruction","name","NodeWithChildren","children","firstChild","_a","lastChild","length","childNodes","Document","Element","attribs","tagName","attributes","Object","keys","map","_b","value","namespace","prefix","isTag","node","elem","result","isText","isComment","cloneChildren","clone","forEach","child","isCDATA","isDocument","isDirective","Error","instruction","sourceCodeLocation","childs","i","CASE_SENSITIVE_TAG_NAMES_MAP","reduce","accumulator","toLowerCase","CARRIAGE_RETURN_REGEX","RegExp","CARRIAGE_RETURN_PLACEHOLDER","concat","Date","now","CARRIAGE_RETURN_PLACEHOLDER_REGEX","formatAttributes","index","attributesLength","attribute","formatTagName","caseSensitiveTagName","getCaseSensitiveTagName","formatDOM","nodes","directive","current","domNodes","nodesLength","nodeName","content","replace","push","substring","indexOf","unshift","HTML","HEAD","BODY","FIRST_TAG_REGEX","HEAD_TAG_REGEX","BODY_TAG_REGEX","parseFromDocument","html","parseFromString","DOMParser","window","domParser_1","document","implementation","htmlDocument_1","createHTMLDocument","element","documentElement","querySelector","innerHTML","parseFromTemplate","template","createElement","domparser","match","escapeSpecialCharacters","firstTagName","doc","test","removeChild","querySelectorAll","elements","DIRECTIVE_REGEX","TypeError","undefined"],"mappings":"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","x_google_ignoreList":[0,1]}