{"version":3,"file":"html-dom-parser.js","sources":["../node_modules/domelementtype/lib/esm/index.js","../node_modules/domhandler/lib/esm/node.js","../src/client/constants.ts","../src/client/utilities.ts","../src/client/domparser.ts","../src/client/html-to-dom.ts"],"sourcesContent":["/** Types of elements found in htmlparser2's DOM */\nexport var ElementType;\n(function (ElementType) {\n    /** Type for the root element of a document */\n    ElementType[\"Root\"] = \"root\";\n    /** Type for Text */\n    ElementType[\"Text\"] = \"text\";\n    /** Type for <? ... ?> */\n    ElementType[\"Directive\"] = \"directive\";\n    /** Type for <!-- ... --> */\n    ElementType[\"Comment\"] = \"comment\";\n    /** Type for <script> tags */\n    ElementType[\"Script\"] = \"script\";\n    /** Type for <style> tags */\n    ElementType[\"Style\"] = \"style\";\n    /** Type for Any tag */\n    ElementType[\"Tag\"] = \"tag\";\n    /** Type for <![CDATA[ ... ]]> */\n    ElementType[\"CDATA\"] = \"cdata\";\n    /** Type for <!doctype ...> */\n    ElementType[\"Doctype\"] = \"doctype\";\n})(ElementType || (ElementType = {}));\n/**\n * Tests whether an element is a tag or not.\n *\n * @param elem Element to test\n */\nexport function isTag(elem) {\n    return (elem.type === ElementType.Tag ||\n        elem.type === ElementType.Script ||\n        elem.type === ElementType.Style);\n}\n// Exports for backwards compatibility\n/** Type for the root element of a document */\nexport const Root = ElementType.Root;\n/** Type for Text */\nexport const Text = ElementType.Text;\n/** Type for <? ... ?> */\nexport const Directive = ElementType.Directive;\n/** Type for <!-- ... --> */\nexport const Comment = ElementType.Comment;\n/** Type for <script> tags */\nexport const Script = ElementType.Script;\n/** Type for <style> tags */\nexport const Style = ElementType.Style;\n/** Type for Any tag */\nexport const Tag = ElementType.Tag;\n/** Type for <![CDATA[ ... ]]> */\nexport const CDATA = ElementType.CDATA;\n/** Type for <!doctype ...> */\nexport const Doctype = ElementType.Doctype;\n","import { ElementType, isTag as isTagRaw } from \"domelementtype\";\n/**\n * This object will be used as the prototype for Nodes when creating a\n * DOM-Level-1-compliant structure.\n */\nexport class Node {\n    constructor() {\n        /** Parent of the node */\n        this.parent = null;\n        /** Previous sibling */\n        this.prev = null;\n        /** Next sibling */\n        this.next = null;\n        /** The start index of the node. Requires `withStartIndices` on the handler to be `true. */\n        this.startIndex = null;\n        /** The end index of the node. Requires `withEndIndices` on the handler to be `true. */\n        this.endIndex = null;\n    }\n    // Read-write aliases for properties\n    /**\n     * Same as {@link parent}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */\n    get parentNode() {\n        return this.parent;\n    }\n    set parentNode(parent) {\n        this.parent = parent;\n    }\n    /**\n     * Same as {@link prev}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */\n    get previousSibling() {\n        return this.prev;\n    }\n    set previousSibling(prev) {\n        this.prev = prev;\n    }\n    /**\n     * Same as {@link next}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */\n    get nextSibling() {\n        return this.next;\n    }\n    set nextSibling(next) {\n        this.next = next;\n    }\n    /**\n     * Clone this node, and optionally its children.\n     *\n     * @param recursive Clone child nodes as well.\n     * @returns A clone of the node.\n     */\n    cloneNode(recursive = false) {\n        return cloneNode(this, recursive);\n    }\n}\n/**\n * A node that contains some data.\n */\nexport class DataNode extends Node {\n    /**\n     * @param data The content of the data node\n     */\n    constructor(data) {\n        super();\n        this.data = data;\n    }\n    /**\n     * Same as {@link data}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */\n    get nodeValue() {\n        return this.data;\n    }\n    set nodeValue(data) {\n        this.data = data;\n    }\n}\n/**\n * Text within the document.\n */\nexport class Text extends DataNode {\n    constructor() {\n        super(...arguments);\n        this.type = ElementType.Text;\n    }\n    get nodeType() {\n        return 3;\n    }\n}\n/**\n * Comments within the document.\n */\nexport class Comment extends DataNode {\n    constructor() {\n        super(...arguments);\n        this.type = ElementType.Comment;\n    }\n    get nodeType() {\n        return 8;\n    }\n}\n/**\n * Processing instructions, including doc types.\n */\nexport class ProcessingInstruction extends DataNode {\n    constructor(name, data) {\n        super(data);\n        this.name = name;\n        this.type = ElementType.Directive;\n    }\n    get nodeType() {\n        return 1;\n    }\n}\n/**\n * A `Node` that can have children.\n */\nexport class NodeWithChildren extends Node {\n    /**\n     * @param children Children of the node. Only certain node types can have children.\n     */\n    constructor(children) {\n        super();\n        this.children = children;\n    }\n    // Aliases\n    /** First child of the node. */\n    get firstChild() {\n        var _a;\n        return (_a = this.children[0]) !== null && _a !== void 0 ? _a : null;\n    }\n    /** Last child of the node. */\n    get lastChild() {\n        return this.children.length > 0\n            ? this.children[this.children.length - 1]\n            : null;\n    }\n    /**\n     * Same as {@link children}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */\n    get childNodes() {\n        return this.children;\n    }\n    set childNodes(children) {\n        this.children = children;\n    }\n}\nexport class CDATA extends NodeWithChildren {\n    constructor() {\n        super(...arguments);\n        this.type = ElementType.CDATA;\n    }\n    get nodeType() {\n        return 4;\n    }\n}\n/**\n * The root node of the document.\n */\nexport class Document extends NodeWithChildren {\n    constructor() {\n        super(...arguments);\n        this.type = ElementType.Root;\n    }\n    get nodeType() {\n        return 9;\n    }\n}\n/**\n * An element within the DOM.\n */\nexport class Element extends NodeWithChildren {\n    /**\n     * @param name Name of the tag, eg. `div`, `span`.\n     * @param attribs Object mapping attribute names to attribute values.\n     * @param children Children of the node.\n     */\n    constructor(name, attribs, children = [], type = name === \"script\"\n        ? ElementType.Script\n        : name === \"style\"\n            ? ElementType.Style\n            : ElementType.Tag) {\n        super(children);\n        this.name = name;\n        this.attribs = attribs;\n        this.type = type;\n    }\n    get nodeType() {\n        return 1;\n    }\n    // DOM Level 1 aliases\n    /**\n     * Same as {@link name}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */\n    get tagName() {\n        return this.name;\n    }\n    set tagName(name) {\n        this.name = name;\n    }\n    get attributes() {\n        return Object.keys(this.attribs).map((name) => {\n            var _a, _b;\n            return ({\n                name,\n                value: this.attribs[name],\n                namespace: (_a = this[\"x-attribsNamespace\"]) === null || _a === void 0 ? void 0 : _a[name],\n                prefix: (_b = this[\"x-attribsPrefix\"]) === null || _b === void 0 ? void 0 : _b[name],\n            });\n        });\n    }\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node is a `Element`, `false` otherwise.\n */\nexport function isTag(node) {\n    return isTagRaw(node);\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `CDATA`, `false` otherwise.\n */\nexport function isCDATA(node) {\n    return node.type === ElementType.CDATA;\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `Text`, `false` otherwise.\n */\nexport function isText(node) {\n    return node.type === ElementType.Text;\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `Comment`, `false` otherwise.\n */\nexport function isComment(node) {\n    return node.type === ElementType.Comment;\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `ProcessingInstruction`, `false` otherwise.\n */\nexport function isDirective(node) {\n    return node.type === ElementType.Directive;\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `ProcessingInstruction`, `false` otherwise.\n */\nexport function isDocument(node) {\n    return node.type === ElementType.Root;\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has children, `false` otherwise.\n */\nexport function hasChildren(node) {\n    return Object.prototype.hasOwnProperty.call(node, \"children\");\n}\n/**\n * Clone a node, and optionally its children.\n *\n * @param recursive Clone child nodes as well.\n * @returns A clone of the node.\n */\nexport function cloneNode(node, recursive = false) {\n    let result;\n    if (isText(node)) {\n        result = new Text(node.data);\n    }\n    else if (isComment(node)) {\n        result = new Comment(node.data);\n    }\n    else if (isTag(node)) {\n        const children = recursive ? cloneChildren(node.children) : [];\n        const clone = new Element(node.name, { ...node.attribs }, children);\n        children.forEach((child) => (child.parent = clone));\n        if (node.namespace != null) {\n            clone.namespace = node.namespace;\n        }\n        if (node[\"x-attribsNamespace\"]) {\n            clone[\"x-attribsNamespace\"] = { ...node[\"x-attribsNamespace\"] };\n        }\n        if (node[\"x-attribsPrefix\"]) {\n            clone[\"x-attribsPrefix\"] = { ...node[\"x-attribsPrefix\"] };\n        }\n        result = clone;\n    }\n    else if (isCDATA(node)) {\n        const children = recursive ? cloneChildren(node.children) : [];\n        const clone = new CDATA(children);\n        children.forEach((child) => (child.parent = clone));\n        result = clone;\n    }\n    else if (isDocument(node)) {\n        const children = recursive ? cloneChildren(node.children) : [];\n        const clone = new Document(children);\n        children.forEach((child) => (child.parent = clone));\n        if (node[\"x-mode\"]) {\n            clone[\"x-mode\"] = node[\"x-mode\"];\n        }\n        result = clone;\n    }\n    else if (isDirective(node)) {\n        const instruction = new ProcessingInstruction(node.name, node.data);\n        if (node[\"x-name\"] != null) {\n            instruction[\"x-name\"] = node[\"x-name\"];\n            instruction[\"x-publicId\"] = node[\"x-publicId\"];\n            instruction[\"x-systemId\"] = node[\"x-systemId\"];\n        }\n        result = instruction;\n    }\n    else {\n        throw new Error(`Not implemented yet: ${node.type}`);\n    }\n    result.startIndex = node.startIndex;\n    result.endIndex = node.endIndex;\n    if (node.sourceCodeLocation != null) {\n        result.sourceCodeLocation = node.sourceCodeLocation;\n    }\n    return result;\n}\nfunction cloneChildren(childs) {\n    const children = childs.map((child) => cloneNode(child, true));\n    for (let i = 1; i < children.length; i++) {\n        children[i].prev = children[i - 1];\n        children[i - 1].next = children[i];\n    }\n    return children;\n}\n",null,null,null,null],"names":["isTag","isTagRaw"],"mappings":";;;;;;IAAA;IACO,IAAI,WAAW;IACtB,CAAC,UAAU,WAAW,EAAE;IACxB;IACA,IAAI,WAAW,CAAC,MAAM,CAAC,GAAG,MAAM;IAChC;IACA,IAAI,WAAW,CAAC,MAAM,CAAC,GAAG,MAAM;IAChC;IACA,IAAI,WAAW,CAAC,WAAW,CAAC,GAAG,WAAW;IAC1C;IACA,IAAI,WAAW,CAAC,SAAS,CAAC,GAAG,SAAS;IACtC;IACA,IAAI,WAAW,CAAC,QAAQ,CAAC,GAAG,QAAQ;IACpC;IACA,IAAI,WAAW,CAAC,OAAO,CAAC,GAAG,OAAO;IAClC;IACA,IAAI,WAAW,CAAC,KAAK,CAAC,GAAG,KAAK;IAC9B;IACA,IAAI,WAAW,CAAC,OAAO,CAAC,GAAG,OAAO;IAClC;IACA,IAAI,WAAW,CAAC,SAAS,CAAC,GAAG,SAAS;IACtC,CAAC,EAAE,WAAW,KAAK,WAAW,GAAG,EAAE,CAAC,CAAC;IACrC;IACA;IACA;IACA;IACA;IACO,SAASA,OAAK,CAAC,IAAI,EAAE;IAC5B,IAAI,QAAQ,IAAI,CAAC,IAAI,KAAK,WAAW,CAAC,GAAG;IACzC,QAAQ,IAAI,CAAC,IAAI,KAAK,WAAW,CAAC,MAAM;IACxC,QAAQ,IAAI,CAAC,IAAI,KAAK,WAAW,CAAC,KAAK;IACvC;IACA;IACA;IACoB,WAAW,CAAC;IAChC;IACoB,WAAW,CAAC;IAChC;IACyB,WAAW,CAAC;IACrC;IACuB,WAAW,CAAC;IACnC;IACsB,WAAW,CAAC;IAClC;IACqB,WAAW,CAAC;IACjC;IACmB,WAAW,CAAC;IAC/B;IACqB,WAAW,CAAC;IACjC;IACuB,WAAW,CAAC;;ICjDnC;IACA;IACA;IACA;IACO,MAAM,IAAI,CAAC;IAClB,IAAI,WAAW,GAAG;IAClB;IACA,QAAQ,IAAI,CAAC,MAAM,GAAG,IAAI;IAC1B;IACA,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI;IACxB;IACA,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI;IACxB;IACA,QAAQ,IAAI,CAAC,UAAU,GAAG,IAAI;IAC9B;IACA,QAAQ,IAAI,CAAC,QAAQ,GAAG,IAAI;IAC5B;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,IAAI,UAAU,GAAG;IACrB,QAAQ,OAAO,IAAI,CAAC,MAAM;IAC1B;IACA,IAAI,IAAI,UAAU,CAAC,MAAM,EAAE;IAC3B,QAAQ,IAAI,CAAC,MAAM,GAAG,MAAM;IAC5B;IACA;IACA;IACA;IACA;IACA,IAAI,IAAI,eAAe,GAAG;IAC1B,QAAQ,OAAO,IAAI,CAAC,IAAI;IACxB;IACA,IAAI,IAAI,eAAe,CAAC,IAAI,EAAE;IAC9B,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI;IACxB;IACA;IACA;IACA;IACA;IACA,IAAI,IAAI,WAAW,GAAG;IACtB,QAAQ,OAAO,IAAI,CAAC,IAAI;IACxB;IACA,IAAI,IAAI,WAAW,CAAC,IAAI,EAAE;IAC1B,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI;IACxB;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,SAAS,CAAC,SAAS,GAAG,KAAK,EAAE;IACjC,QAAQ,OAAO,SAAS,CAAC,IAAI,EAAE,SAAS,CAAC;IACzC;IACA;IACA;IACA;IACA;IACO,MAAM,QAAQ,SAAS,IAAI,CAAC;IACnC;IACA;IACA;IACA,IAAI,WAAW,CAAC,IAAI,EAAE;IACtB,QAAQ,KAAK,EAAE;IACf,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI;IACxB;IACA;IACA;IACA;IACA;IACA,IAAI,IAAI,SAAS,GAAG;IACpB,QAAQ,OAAO,IAAI,CAAC,IAAI;IACxB;IACA,IAAI,IAAI,SAAS,CAAC,IAAI,EAAE;IACxB,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI;IACxB;IACA;IACA;IACA;IACA;IACO,MAAM,IAAI,SAAS,QAAQ,CAAC;IACnC,IAAI,WAAW,GAAG;IAClB,QAAQ,KAAK,CAAC,GAAG,SAAS,CAAC;IAC3B,QAAQ,IAAI,CAAC,IAAI,GAAG,WAAW,CAAC,IAAI;IACpC;IACA,IAAI,IAAI,QAAQ,GAAG;IACnB,QAAQ,OAAO,CAAC;IAChB;IACA;IACA;IACA;IACA;IACO,MAAM,OAAO,SAAS,QAAQ,CAAC;IACtC,IAAI,WAAW,GAAG;IAClB,QAAQ,KAAK,CAAC,GAAG,SAAS,CAAC;IAC3B,QAAQ,IAAI,CAAC,IAAI,GAAG,WAAW,CAAC,OAAO;IACvC;IACA,IAAI,IAAI,QAAQ,GAAG;IACnB,QAAQ,OAAO,CAAC;IAChB;IACA;IACA;IACA;IACA;IACO,MAAM,qBAAqB,SAAS,QAAQ,CAAC;IACpD,IAAI,WAAW,CAAC,IAAI,EAAE,IAAI,EAAE;IAC5B,QAAQ,KAAK,CAAC,IAAI,CAAC;IACnB,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI;IACxB,QAAQ,IAAI,CAAC,IAAI,GAAG,WAAW,CAAC,SAAS;IACzC;IACA,IAAI,IAAI,QAAQ,GAAG;IACnB,QAAQ,OAAO,CAAC;IAChB;IACA;IACA;IACA;IACA;IACO,MAAM,gBAAgB,SAAS,IAAI,CAAC;IAC3C;IACA;IACA;IACA,IAAI,WAAW,CAAC,QAAQ,EAAE;IAC1B,QAAQ,KAAK,EAAE;IACf,QAAQ,IAAI,CAAC,QAAQ,GAAG,QAAQ;IAChC;IACA;IACA;IACA,IAAI,IAAI,UAAU,GAAG;IACrB,QAAQ,IAAI,EAAE;IACd,QAAQ,OAAO,CAAC,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,GAAG,EAAE,GAAG,IAAI;IAC5E;IACA;IACA,IAAI,IAAI,SAAS,GAAG;IACpB,QAAQ,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG;IACtC,cAAc,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC;IACpD,cAAc,IAAI;IAClB;IACA;IACA;IACA;IACA;IACA,IAAI,IAAI,UAAU,GAAG;IACrB,QAAQ,OAAO,IAAI,CAAC,QAAQ;IAC5B;IACA,IAAI,IAAI,UAAU,CAAC,QAAQ,EAAE;IAC7B,QAAQ,IAAI,CAAC,QAAQ,GAAG,QAAQ;IAChC;IACA;IACO,MAAM,KAAK,SAAS,gBAAgB,CAAC;IAC5C,IAAI,WAAW,GAAG;IAClB,QAAQ,KAAK,CAAC,GAAG,SAAS,CAAC;IAC3B,QAAQ,IAAI,CAAC,IAAI,GAAG,WAAW,CAAC,KAAK;IACrC;IACA,IAAI,IAAI,QAAQ,GAAG;IACnB,QAAQ,OAAO,CAAC;IAChB;IACA;IACA;IACA;IACA;IACO,MAAM,QAAQ,SAAS,gBAAgB,CAAC;IAC/C,IAAI,WAAW,GAAG;IAClB,QAAQ,KAAK,CAAC,GAAG,SAAS,CAAC;IAC3B,QAAQ,IAAI,CAAC,IAAI,GAAG,WAAW,CAAC,IAAI;IACpC;IACA,IAAI,IAAI,QAAQ,GAAG;IACnB,QAAQ,OAAO,CAAC;IAChB;IACA;IACA;IACA;IACA;IACO,MAAM,OAAO,SAAS,gBAAgB,CAAC;IAC9C;IACA;IACA;IACA;IACA;IACA,IAAI,WAAW,CAAC,IAAI,EAAE,OAAO,EAAE,QAAQ,GAAG,EAAE,EAAE,IAAI,GAAG,IAAI,KAAK;IAC9D,UAAU,WAAW,CAAC;IACtB,UAAU,IAAI,KAAK;IACnB,cAAc,WAAW,CAAC;IAC1B,cAAc,WAAW,CAAC,GAAG,EAAE;IAC/B,QAAQ,KAAK,CAAC,QAAQ,CAAC;IACvB,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI;IACxB,QAAQ,IAAI,CAAC,OAAO,GAAG,OAAO;IAC9B,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI;IACxB;IACA,IAAI,IAAI,QAAQ,GAAG;IACnB,QAAQ,OAAO,CAAC;IAChB;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,IAAI,OAAO,GAAG;IAClB,QAAQ,OAAO,IAAI,CAAC,IAAI;IACxB;IACA,IAAI,IAAI,OAAO,CAAC,IAAI,EAAE;IACtB,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI;IACxB;IACA,IAAI,IAAI,UAAU,GAAG;IACrB,QAAQ,OAAO,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,KAAK;IACvD,YAAY,IAAI,EAAE,EAAE,EAAE;IACtB,YAAY,QAAQ;IACpB,gBAAgB,IAAI;IACpB,gBAAgB,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;IACzC,gBAAgB,SAAS,EAAE,CAAC,EAAE,GAAG,IAAI,CAAC,oBAAoB,CAAC,MAAM,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC;IAC1G,gBAAgB,MAAM,EAAE,CAAC,EAAE,GAAG,IAAI,CAAC,iBAAiB,CAAC,MAAM,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC;IACpG,aAAa;IACb,SAAS,CAAC;IACV;IACA;IACA;IACA;IACA;IACA;IACO,SAAS,KAAK,CAAC,IAAI,EAAE;IAC5B,IAAI,OAAOC,OAAQ,CAAC,IAAI,CAAC;IACzB;IACA;IACA;IACA;IACA;IACO,SAAS,OAAO,CAAC,IAAI,EAAE;IAC9B,IAAI,OAAO,IAAI,CAAC,IAAI,KAAK,WAAW,CAAC,KAAK;IAC1C;IACA;IACA;IACA;IACA;IACO,SAAS,MAAM,CAAC,IAAI,EAAE;IAC7B,IAAI,OAAO,IAAI,CAAC,IAAI,KAAK,WAAW,CAAC,IAAI;IACzC;IACA;IACA;IACA;IACA;IACO,SAAS,SAAS,CAAC,IAAI,EAAE;IAChC,IAAI,OAAO,IAAI,CAAC,IAAI,KAAK,WAAW,CAAC,OAAO;IAC5C;IACA;IACA;IACA;IACA;IACO,SAAS,WAAW,CAAC,IAAI,EAAE;IAClC,IAAI,OAAO,IAAI,CAAC,IAAI,KAAK,WAAW,CAAC,SAAS;IAC9C;IACA;IACA;IACA;IACA;IACO,SAAS,UAAU,CAAC,IAAI,EAAE;IACjC,IAAI,OAAO,IAAI,CAAC,IAAI,KAAK,WAAW,CAAC,IAAI;IACzC;IAQA;IACA;IACA;IACA;IACA;IACA;IACO,SAAS,SAAS,CAAC,IAAI,EAAE,SAAS,GAAG,KAAK,EAAE;IACnD,IAAI,IAAI,MAAM;IACd,IAAI,IAAI,MAAM,CAAC,IAAI,CAAC,EAAE;IACtB,QAAQ,MAAM,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;IACpC;IACA,SAAS,IAAI,SAAS,CAAC,IAAI,CAAC,EAAE;IAC9B,QAAQ,MAAM,GAAG,IAAI,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC;IACvC;IACA,SAAS,IAAI,KAAK,CAAC,IAAI,CAAC,EAAE;IAC1B,QAAQ,MAAM,QAAQ,GAAG,SAAS,GAAG,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE;IACtE,QAAQ,MAAM,KAAK,GAAG,IAAI,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,GAAG,IAAI,CAAC,OAAO,EAAE,EAAE,QAAQ,CAAC;IAC3E,QAAQ,QAAQ,CAAC,OAAO,CAAC,CAAC,KAAK,MAAM,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC;IAC3D,QAAQ,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,EAAE;IACpC,YAAY,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS;IAC5C;IACA,QAAQ,IAAI,IAAI,CAAC,oBAAoB,CAAC,EAAE;IACxC,YAAY,KAAK,CAAC,oBAAoB,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,oBAAoB,CAAC,EAAE;IAC3E;IACA,QAAQ,IAAI,IAAI,CAAC,iBAAiB,CAAC,EAAE;IACrC,YAAY,KAAK,CAAC,iBAAiB,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,iBAAiB,CAAC,EAAE;IACrE;IACA,QAAQ,MAAM,GAAG,KAAK;IACtB;IACA,SAAS,IAAI,OAAO,CAAC,IAAI,CAAC,EAAE;IAC5B,QAAQ,MAAM,QAAQ,GAAG,SAAS,GAAG,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE;IACtE,QAAQ,MAAM,KAAK,GAAG,IAAI,KAAK,CAAC,QAAQ,CAAC;IACzC,QAAQ,QAAQ,CAAC,OAAO,CAAC,CAAC,KAAK,MAAM,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC;IAC3D,QAAQ,MAAM,GAAG,KAAK;IACtB;IACA,SAAS,IAAI,UAAU,CAAC,IAAI,CAAC,EAAE;IAC/B,QAAQ,MAAM,QAAQ,GAAG,SAAS,GAAG,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE;IACtE,QAAQ,MAAM,KAAK,GAAG,IAAI,QAAQ,CAAC,QAAQ,CAAC;IAC5C,QAAQ,QAAQ,CAAC,OAAO,CAAC,CAAC,KAAK,MAAM,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC;IAC3D,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,EAAE;IAC5B,YAAY,KAAK,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC;IAC5C;IACA,QAAQ,MAAM,GAAG,KAAK;IACtB;IACA,SAAS,IAAI,WAAW,CAAC,IAAI,CAAC,EAAE;IAChC,QAAQ,MAAM,WAAW,GAAG,IAAI,qBAAqB,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC;IAC3E,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,IAAI,EAAE;IACpC,YAAY,WAAW,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC;IAClD,YAAY,WAAW,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC;IAC1D,YAAY,WAAW,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC;IAC1D;IACA,QAAQ,MAAM,GAAG,WAAW;IAC5B;IACA,SAAS;IACT,QAAQ,MAAM,IAAI,KAAK,CAAC,CAAC,qBAAqB,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IAC5D;IACA,IAAI,MAAM,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU;IACvC,IAAI,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ;IACnC,IAAI,IAAI,IAAI,CAAC,kBAAkB,IAAI,IAAI,EAAE;IACzC,QAAQ,MAAM,CAAC,kBAAkB,GAAG,IAAI,CAAC,kBAAkB;IAC3D;IACA,IAAI,OAAO,MAAM;IACjB;IACA,SAAS,aAAa,CAAC,MAAM,EAAE;IAC/B,IAAI,MAAM,QAAQ,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,KAAK,SAAS,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;IAClE,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IAC9C,QAAQ,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;IAC1C,QAAQ,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,GAAG,QAAQ,CAAC,CAAC,CAAC;IAC1C;IACA,IAAI,OAAO,QAAQ;IACnB;;ICjVA;;;;IAIG;IACI,IAAM,wBAAwB,GAAG;QACtC,eAAe;QACf,kBAAkB;QAClB,UAAU;QACV,SAAS;QACT,eAAe;QACf,qBAAqB;QACrB,aAAa;QACb,kBAAkB;QAClB,mBAAmB;QACnB,mBAAmB;QACnB,cAAc;QACd,SAAS;QACT,SAAS;QACT,SAAS;QACT,SAAS;QACT,SAAS;QACT,gBAAgB;QAChB,SAAS;QACT,SAAS;QACT,aAAa;QACb,cAAc;QACd,UAAU;QACV,cAAc;QACd,oBAAoB;QACpB,aAAa;QACb,QAAQ;QACR,cAAc;QACd,eAAe;QACf,gBAAgB;QAChB,gBAAgB;QAChB,UAAU;KACF;IAEH,IAAM,4BAA4B,GAAG,wBAAwB,CAAC,MAAM,CACzE,UAAC,WAAW,EAAE,OAAO,EAAA;QACnB,WAAW,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,GAAG,OAAO;IAC5C,IAAA,OAAO,WAAW;IACpB,CAAC,EACD,EAA4B,CAC7B;IAEM,IAAM,eAAe,GAAG,IAAI;IAC5B,IAAM,qBAAqB,GAAG,IAAI,MAAM,CAAC,eAAe,EAAE,GAAG,CAAC;IAC9D,IAAM,2BAA2B,GAAG,gDAAA,CAAA,MAAA,CAAiD,IAAI,CAAC,GAAG,EAAE,EAAA,IAAA,CAAI;IACnG,IAAM,iCAAiC,GAAG,IAAI,MAAM,CACzD,2BAA2B,EAC3B,GAAG,CACJ;;IC1CD;;;;;IAKG;IACH,SAAS,uBAAuB,CAAC,OAAe,EAAA;IAC9C,IAAA,OAAO,4BAA4B,CAAC,OAAO,CAAC;IAC9C;IAEA;;;;;IAKG;IACG,SAAU,gBAAgB,CAAC,UAAwB,EAAA;QACvD,IAAM,GAAG,GAA2B,EAAE;QACtC,IAAI,KAAK,GAAG,CAAC;IACb,IAAA,IAAM,gBAAgB,GAAG,UAAU,CAAC,MAAM;;IAG1C,IAAA,OAAO,KAAK,GAAG,gBAAgB,EAAE,KAAK,EAAE,EAAE;IACxC,QAAA,IAAM,SAAS,GAAG,UAAU,CAAC,KAAK,CAAC;YACnC,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,SAAS,CAAC,KAAK;;IAGvC,IAAA,OAAO,GAAG;IACZ;IAEA;;;;;;IAMG;IACH,SAAS,aAAa,CAAC,OAAe,EAAA;IACpC,IAAA,OAAO,GAAG,OAAO,CAAC,WAAW,EAAE;IAC/B,IAAA,IAAM,oBAAoB,GAAG,uBAAuB,CAAC,OAAO,CAAC;QAE7D,IAAI,oBAAoB,EAAE;IACxB,QAAA,OAAO,oBAAoB;;IAG7B,IAAA,OAAO,OAAO;IAChB;IAEA;;;;;IAKG;IACG,SAAU,uBAAuB,CAAC,IAAY,EAAA;QAClD,OAAO,IAAI,CAAC,OAAO,CAAC,qBAAqB,EAAE,2BAA2B,CAAC;IACzE;IAEA;;;;;IAKG;IACG,SAAU,uBAAuB,CAAC,IAAY,EAAA;QAClD,OAAO,IAAI,CAAC,OAAO,CAAC,iCAAiC,EAAE,eAAe,CAAC;IACzE;IAEA;;;;;;;IAOG;aACa,SAAS,CACvB,KAAe,EACf,MAA6B,EAC7B,SAAkB,EAAA;IADlB,IAAA,IAAA,MAAA,KAAA,KAAA,CAAA,EAAA,EAAA,MAA6B,GAAA,IAAA,CAAA;QAG7B,IAAM,QAAQ,GAAG,EAAE;IACnB,IAAA,IAAI,OAAO;QACX,IAAI,KAAK,GAAG,CAAC;IACb,IAAA,IAAM,WAAW,GAAG,KAAK,CAAC,MAAM;IAEhC,IAAA,OAAO,KAAK,GAAG,WAAW,EAAE,KAAK,EAAE,EAAE;IACnC,QAAA,IAAM,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC;;IAGzB,QAAA,QAAQ,IAAI,CAAC,QAAQ;gBACnB,KAAK,CAAC,EAAE;oBACN,IAAM,OAAO,GAAG,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC;;IAG5C,gBAAA,OAAO,GAAG,IAAI,OAAO,CACnB,OAAO,EACP,gBAAgB,CAAE,IAAoB,CAAC,UAAU,CAAC,CACnD;oBAED,OAAO,CAAC,QAAQ,GAAG,SAAS;;IAE1B,gBAAA,OAAO,KAAK;IACV,sBAAG,IAA4B,CAAC,OAAO,CAAC;IACxC,sBAAE,IAAI,CAAC,UAAU,EACnB,OAAO,CACR;oBAED;;IAGF,YAAA,KAAK,CAAC;oBACJ,OAAO,GAAG,IAAI,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,SAAU,CAAC,CAAC;oBAC5D;IAEF,YAAA,KAAK,CAAC;oBACJ,OAAO,GAAG,IAAI,OAAO,CAAC,IAAI,CAAC,SAAU,CAAC;oBACtC;IAEF,YAAA;oBACE;;;YAIJ,IAAM,IAAI,GAAG,QAAQ,CAAC,KAAK,GAAG,CAAC,CAAC,IAAI,IAAI;YACxC,IAAI,IAAI,EAAE;IACR,YAAA,IAAI,CAAC,IAAI,GAAG,OAAO;;;IAIrB,QAAA,OAAO,CAAC,MAAM,GAAG,MAAiB;IAClC,QAAA,OAAO,CAAC,IAAI,GAAG,IAAI;IACnB,QAAA,OAAO,CAAC,IAAI,GAAG,IAAI;IAEnB,QAAA,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC;;QAGxB,IAAI,SAAS,EAAE;YACb,OAAO,GAAG,IAAI,qBAAqB,CACjC,SAAS,CAAC,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,WAAW,EAAE,EAC5D,SAAS,CACV;YAED,OAAO,CAAC,IAAI,GAAG,QAAQ,CAAC,CAAC,CAAC,IAAI,IAAI;IAClC,QAAA,OAAO,CAAC,MAAM,GAAG,MAAiB;IAClC,QAAA,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC;IAEzB,QAAA,IAAI,QAAQ,CAAC,CAAC,CAAC,EAAE;gBACf,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,QAAQ,CAAC,CAAC,CAAC;;;IAIlC,IAAA,OAAO,QAAQ;IACjB;;IClKA;IACA,IAAM,IAAI,GAAG,MAAM;IACnB,IAAM,IAAI,GAAG,MAAM;IACnB,IAAM,IAAI,GAAG,MAAM;IACnB,IAAM,eAAe,GAAG,oBAAoB,CAAC;IAE7C;IACA,IAAM,cAAc,GAAG,aAAa;IACpC,IAAM,cAAc,GAAG,aAAa;IAEpC;IACA;IACA,IAAI,iBAAiB,GAAG,UAAC,IAAY,EAAE,OAAgB,EAAA;;IAErD,IAAA,MAAM,IAAI,KAAK,CACb,4EAA4E,CAC7E;IACH,CAAC;IAED;IACA,IAAI,eAAe,GAAG,UAAC,IAAY,EAAE,OAAgB,EAAA;;IAEnD,IAAA,MAAM,IAAI,KAAK,CACb,qEAAqE,CACtE;IACH,CAAC;IAED,IAAM,SAAS,GAAG,OAAO,MAAM,KAAK,QAAQ,IAAI,MAAM,CAAC,SAAS;IAEhE;;;;IAIG;IACH,IAAI,OAAO,SAAS,KAAK,UAAU,EAAE;IACnC,IAAA,IAAM,WAAS,GAAG,IAAI,SAAS,EAAE;QACjC,IAAM,UAAQ,GAAG,WAAW;IAE5B;;;;;;IAMG;IACH,IAAA,eAAe,GAAG,UAAC,IAAY,EAAE,OAAgB,EAAA;YAC/C,IAAI,OAAO,EAAE;;gBAEX,IAAI,GAAG,WAAI,OAAO,EAAA,GAAA,CAAA,CAAA,MAAA,CAAI,IAAI,EAAK,IAAA,CAAA,CAAA,MAAA,CAAA,OAAO,MAAG;;YAG3C,OAAO,WAAS,CAAC,eAAe,CAAC,IAAI,EAAE,UAAQ,CAAC;IAClD,KAAC;QAED,iBAAiB,GAAG,eAAe;IACrC;IAEA;;;;IAIG;IACH,IAAI,OAAO,QAAQ,KAAK,QAAQ,IAAI,QAAQ,CAAC,cAAc,EAAE;QAC3D,IAAM,cAAY,GAAG,QAAQ,CAAC,cAAc,CAAC,kBAAkB,EAAE;IAEjE;;;;;;IAMG;IACH,IAAA,iBAAiB,GAAG,UAAU,IAAY,EAAE,OAAgB,EAAA;YAC1D,IAAI,OAAO,EAAE;gBACX,IAAM,OAAO,GAAG,cAAY,CAAC,eAAe,CAAC,aAAa,CAAC,OAAO,CAAC;gBAEnE,IAAI,OAAO,EAAE;IACX,gBAAA,OAAO,CAAC,SAAS,GAAG,IAAI;;IAG1B,YAAA,OAAO,cAAY;;IAGrB,QAAA,cAAY,CAAC,eAAe,CAAC,SAAS,GAAG,IAAI;IAC7C,QAAA,OAAO,cAAY;IACrB,KAAC;IACH;IAEA;;;;IAIG;IACH,IAAM,QAAQ,GACZ,OAAO,QAAQ,KAAK,QAAQ,IAAI,QAAQ,CAAC,aAAa,CAAC,UAAU,CAAC;IAEpE,IAAI,iBAA6C;IAEjD,IAAI,QAAQ,IAAI,QAAQ,CAAC,OAAO,EAAE;IAChC;;;;;IAKG;QACH,iBAAiB,GAAG,UAAC,IAAY,EAAA;IAC/B,QAAA,QAAQ,CAAC,SAAS,GAAG,IAAI;IACzB,QAAA,OAAO,QAAQ,CAAC,OAAO,CAAC,UAAU;IACpC,KAAC;IACH;IAEA;;;;;IAKG;IACqB,SAAA,SAAS,CAAC,IAAY,EAAA;;;IAE5C,IAAA,IAAI,GAAG,uBAAuB,CAAC,IAAI,CAAC;QAEpC,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC;QACzC,IAAM,YAAY,GAAG,KAAK,IAAI,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,EAAE;QAEpE,QAAQ,YAAY;YAClB,KAAK,IAAI,EAAE;IACT,YAAA,IAAM,GAAG,GAAG,eAAe,CAAC,IAAI,CAAC;;;gBAIjC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;oBAC9B,IAAM,OAAO,GAAG,GAAG,CAAC,aAAa,CAAC,IAAI,CAAC;IACvC,gBAAA,CAAA,EAAA,GAAA,OAAO,KAAA,IAAA,IAAP,OAAO,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAP,OAAO,CAAE,UAAU,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,WAAW,CAAC,OAAO,CAAC;;gBAG3C,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;oBAC9B,IAAM,OAAO,GAAG,GAAG,CAAC,aAAa,CAAC,IAAI,CAAC;IACvC,gBAAA,CAAA,EAAA,GAAA,OAAO,KAAA,IAAA,IAAP,OAAO,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAP,OAAO,CAAE,UAAU,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,WAAW,CAAC,OAAO,CAAC;;IAG3C,YAAA,OAAO,GAAG,CAAC,gBAAgB,CAAC,IAAI,CAAC;;IAGnC,QAAA,KAAK,IAAI;YACT,KAAK,IAAI,EAAE;gBACT,IAAM,QAAQ,GAAG,iBAAiB,CAAC,IAAI,CAAC,CAAC,gBAAgB,CAAC,YAAY,CAAC;;IAGvE,YAAA,IAAI,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;oBAC1D,OAAO,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAW,CAAC,UAAU;;IAG3C,YAAA,OAAO,QAAQ;;;YAIjB,SAAS;gBACP,IAAI,iBAAiB,EAAE;IACrB,gBAAA,OAAO,iBAAiB,CAAC,IAAI,CAAC;;IAEhC,YAAA,IAAM,OAAO,GAAG,iBAAiB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,aAAa,CAAC,IAAI,CAAC;gBACjE,OAAO,OAAQ,CAAC,UAAU;;;IAGhC;;ICnKA,IAAM,eAAe,GAAG,kBAAkB,CAAC;IAE3C;;;;;IAKG;IACqB,SAAA,aAAa,CAAC,IAAY,EAAA;IAChD,IAAA,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;IAC5B,QAAA,MAAM,IAAI,SAAS,CAAC,iCAAiC,CAAC;;QAGxD,IAAI,CAAC,IAAI,EAAE;IACT,QAAA,OAAO,EAAE;;;QAIX,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC;IACzC,IAAA,IAAM,SAAS,GAAG,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,SAAS;QAE9C,OAAO,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,SAAS,CAAC;IACpD;;;;;;;;","x_google_ignoreList":[0,1]}